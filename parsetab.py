
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'NAME VARIABLE LPAREN RPAREN HYPHEN EQUALS DEFINE_KEY DOMAIN_KEY REQUIREMENTS_KEY STRIPS_KEY EQUALITY_KEY TYPING_KEY TYPES_KEY PREDICATES_KEY ACTION_KEY PARAMETERS_KEY PRECONDITION_KEY EFFECT_KEY AND_KEY NOT_KEY PROBLEM_KEY OBJECTS_KEY INIT_KEY GOAL_KEYpddl : domain\n            | problemdomain : LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPARENproblem : LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPARENdomain_def : LPAREN DOMAIN_KEY NAME RPARENproblem_def : LPAREN PROBLEM_KEY NAME RPARENobjects_def : LPAREN OBJECTS_KEY typed_constants_lst RPARENinit_def : LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN INIT_KEY ground_predicates_lst RPARENgoal_def : LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPARENrequire_def : LPAREN REQUIREMENTS_KEY require_key_lst RPARENrequire_key_lst : require_key require_key_lst\n                       | require_keyrequire_key : STRIPS_KEY\n                   | EQUALITY_KEY\n                   | TYPING_KEYtypes_def : LPAREN TYPES_KEY names_lst RPARENpredicates_def : LPAREN PREDICATES_KEY predicate_def_lst RPARENpredicate_def_lst : predicate_def predicate_def_lst\n                         | predicate_defpredicate_def : LPAREN NAME typed_variables_lst RPAREN\n                     | LPAREN NAME RPARENaction_def_lst : action_def action_def_lst\n                      | action_defaction_def : LPAREN ACTION_KEY NAME parameters_def action_def_body RPARENparameters_def : PARAMETERS_KEY LPAREN typed_variables_lst RPAREN\n                      | PARAMETERS_KEY LPAREN RPARENaction_def_body : precond_def effects_defprecond_def : PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN\n                   | PRECONDITION_KEY literaleffects_def : EFFECT_KEY LPAREN AND_KEY literals_lst RPAREN\n                   | EFFECT_KEY literalliterals_lst : literal literals_lst\n                    | literalliteral : LPAREN NOT_KEY predicate RPAREN\n               | predicateground_predicates_lst : ground_predicate ground_predicates_lst\n                             | ground_predicatepredicate : LPAREN NAME variables_lst RPAREN\n                 | LPAREN EQUALS VARIABLE VARIABLE RPAREN\n                 | LPAREN NAME RPARENground_predicate : LPAREN NAME constants_lst RPAREN\n                        | LPAREN NAME RPARENtyped_constants_lst : constants_lst HYPHEN type typed_constants_lst\n                           | constants_lst HYPHEN typetyped_variables_lst : variables_lst HYPHEN type typed_variables_lst\n                           | variables_lst HYPHEN typeconstants_lst : constant constants_lst\n                     | constantvariables_lst : VARIABLE variables_lst\n                     | VARIABLEnames_lst : NAME names_lst\n                 | NAMEtype : NAMEconstant : NAME'
    
_lr_action_items = {'EQUALS':([104,117,120,124,],[113,113,113,113,]),'EQUALITY_KEY':([17,25,27,28,29,],[27,-14,-15,-16,27,]),'STRIPS_KEY':([17,25,27,28,29,],[25,-14,-15,-16,25,]),'INIT_KEY':([23,],[39,]),'GOAL_KEY':([40,],[56,]),'PREDICATES_KEY':([31,],[46,]),'PRECONDITION_KEY':([88,102,112,],[96,-27,-26,]),'EFFECT_KEY':([97,105,106,122,129,130,132,134,],[108,-30,-36,-41,-35,-39,-29,-40,]),'LPAREN':([0,5,6,7,10,12,16,19,24,32,33,34,39,42,46,47,50,55,56,59,61,68,70,76,79,82,84,87,89,93,96,99,106,108,109,114,116,122,125,127,129,130,134,],[2,8,9,11,15,18,23,31,40,49,-5,-6,54,-11,60,49,-7,72,73,-17,60,-9,72,-18,-43,72,-22,95,-42,-21,104,-8,-36,117,-25,120,124,-41,124,124,-35,-39,-40,]),'VARIABLE':([67,74,83,95,101,113,115,119,],[-54,83,83,83,83,119,83,128,]),'DOMAIN_KEY':([8,9,],[13,13,]),'PROBLEM_KEY':([8,],[14,]),'DEFINE_KEY':([2,],[5,]),'PARAMETERS_KEY':([77,],[87,]),'TYPES_KEY':([18,],[30,]),'RPAREN':([20,21,25,26,27,28,29,35,37,38,41,43,44,45,47,48,52,53,55,58,61,62,63,66,67,69,71,74,75,78,79,80,81,83,84,85,89,90,91,92,93,95,98,100,101,103,106,107,109,110,111,115,118,121,122,123,125,126,128,129,130,131,133,134,135,],[33,34,-14,42,-15,-16,-13,50,-55,-49,57,-12,-53,59,-24,64,-48,68,-38,-52,-20,76,-23,-45,-54,79,-37,84,-19,-44,-43,89,90,-51,-22,93,-42,99,100,-50,-21,102,109,110,-47,112,-36,-28,-25,-10,-46,122,-32,129,-41,130,-34,132,134,-35,-39,-33,135,-40,-31,]),'HYPHEN':([36,37,38,52,83,86,92,],[51,-55,-49,-48,-51,94,-50,]),'TYPING_KEY':([17,25,27,28,29,],[28,-14,-15,-16,28,]),'NAME':([13,14,22,30,37,38,44,51,54,60,65,66,67,69,72,94,104,117,120,124,],[20,21,37,44,-55,37,44,67,69,74,77,37,-54,37,69,67,115,115,115,115,]),'REQUIREMENTS_KEY':([11,],[17,]),'ACTION_KEY':([49,],[65,]),'$end':([1,3,4,57,64,],[-2,0,-1,-4,-3,]),'NOT_KEY':([104,117,124,],[114,114,114,]),'OBJECTS_KEY':([15,],[22,]),'AND_KEY':([54,73,104,117,],[70,82,116,127,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ground_predicates_lst':([39,55,70,82,],[53,71,81,91,]),'predicate_def':([46,61,],[61,61,]),'effects_def':([97,],[107,]),'typed_constants_lst':([22,66,],[35,78,]),'action_def':([32,47,],[47,47,]),'ground_predicate':([39,55,70,82,],[55,55,55,55,]),'problem_def':([5,],[6,]),'goal_def':([24,],[41,]),'precond_def':([88,],[97,]),'require_key':([17,29,],[29,29,]),'domain_def':([5,6,],[7,10,]),'objects_def':([10,],[16,]),'require_key_lst':([17,29,],[26,43,]),'names_lst':([30,44,],[45,58,]),'pddl':([0,],[3,]),'parameters_def':([77,],[88,]),'predicate_def_lst':([46,61,],[62,75,]),'problem':([0,],[1,]),'literals_lst':([116,125,127,],[126,131,133,]),'domain':([0,],[4,]),'predicates_def':([19,],[32,]),'literal':([96,108,116,125,127,],[105,118,125,125,125,]),'require_def':([7,],[12,]),'typed_variables_lst':([74,95,101,],[85,103,111,]),'constant':([22,38,66,69,],[38,38,38,38,]),'predicate':([96,108,114,116,125,127,],[106,106,121,106,106,106,]),'init_def':([16,],[24,]),'action_def_body':([88,],[98,]),'action_def_lst':([32,47,],[48,63,]),'types_def':([12,],[19,]),'type':([51,94,],[66,101,]),'constants_lst':([22,38,66,69,],[36,52,36,80,]),'variables_lst':([74,83,95,101,115,],[86,92,86,86,123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pddl","S'",1,None,None,None),
  ('pddl -> domain','pddl',1,'p_pddl','pddlparser.py',117),
  ('pddl -> problem','pddl',1,'p_pddl','pddlparser.py',118),
  ('domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN','domain',8,'p_domain','pddlparser.py',123),
  ('problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN','problem',8,'p_problem','pddlparser.py',128),
  ('domain_def -> LPAREN DOMAIN_KEY NAME RPAREN','domain_def',4,'p_domain_def','pddlparser.py',133),
  ('problem_def -> LPAREN PROBLEM_KEY NAME RPAREN','problem_def',4,'p_problem_def','pddlparser.py',138),
  ('objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN','objects_def',4,'p_objects_def','pddlparser.py',143),
  ('init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','init_def',7,'p_init_def','pddlparser.py',148),
  ('init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN','init_def',4,'p_init_def','pddlparser.py',149),
  ('goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','goal_def',7,'p_goal_def','pddlparser.py',157),
  ('require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN','require_def',4,'p_require_def','pddlparser.py',162),
  ('require_key_lst -> require_key require_key_lst','require_key_lst',2,'p_require_key_lst','pddlparser.py',167),
  ('require_key_lst -> require_key','require_key_lst',1,'p_require_key_lst','pddlparser.py',168),
  ('require_key -> STRIPS_KEY','require_key',1,'p_require_key','pddlparser.py',176),
  ('require_key -> EQUALITY_KEY','require_key',1,'p_require_key','pddlparser.py',177),
  ('require_key -> TYPING_KEY','require_key',1,'p_require_key','pddlparser.py',178),
  ('types_def -> LPAREN TYPES_KEY names_lst RPAREN','types_def',4,'p_types_def','pddlparser.py',183),
  ('predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN','predicates_def',4,'p_predicates_def','pddlparser.py',188),
  ('predicate_def_lst -> predicate_def predicate_def_lst','predicate_def_lst',2,'p_predicate_def_lst','pddlparser.py',193),
  ('predicate_def_lst -> predicate_def','predicate_def_lst',1,'p_predicate_def_lst','pddlparser.py',194),
  ('predicate_def -> LPAREN NAME typed_variables_lst RPAREN','predicate_def',4,'p_predicate_def','pddlparser.py',202),
  ('predicate_def -> LPAREN NAME RPAREN','predicate_def',3,'p_predicate_def','pddlparser.py',203),
  ('action_def_lst -> action_def action_def_lst','action_def_lst',2,'p_action_def_lst','pddlparser.py',211),
  ('action_def_lst -> action_def','action_def_lst',1,'p_action_def_lst','pddlparser.py',212),
  ('action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN','action_def',6,'p_action_def','pddlparser.py',220),
  ('parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN','parameters_def',4,'p_parameters_def','pddlparser.py',225),
  ('parameters_def -> PARAMETERS_KEY LPAREN RPAREN','parameters_def',3,'p_parameters_def','pddlparser.py',226),
  ('action_def_body -> precond_def effects_def','action_def_body',2,'p_action_def_body','pddlparser.py',234),
  ('precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN','precond_def',5,'p_precond_def','pddlparser.py',239),
  ('precond_def -> PRECONDITION_KEY literal','precond_def',2,'p_precond_def','pddlparser.py',240),
  ('effects_def -> EFFECT_KEY LPAREN AND_KEY literals_lst RPAREN','effects_def',5,'p_effects_def','pddlparser.py',248),
  ('effects_def -> EFFECT_KEY literal','effects_def',2,'p_effects_def','pddlparser.py',249),
  ('literals_lst -> literal literals_lst','literals_lst',2,'p_literals_lst','pddlparser.py',257),
  ('literals_lst -> literal','literals_lst',1,'p_literals_lst','pddlparser.py',258),
  ('literal -> LPAREN NOT_KEY predicate RPAREN','literal',4,'p_literal','pddlparser.py',266),
  ('literal -> predicate','literal',1,'p_literal','pddlparser.py',267),
  ('ground_predicates_lst -> ground_predicate ground_predicates_lst','ground_predicates_lst',2,'p_ground_predicates_lst','pddlparser.py',275),
  ('ground_predicates_lst -> ground_predicate','ground_predicates_lst',1,'p_ground_predicates_lst','pddlparser.py',276),
  ('predicate -> LPAREN NAME variables_lst RPAREN','predicate',4,'p_predicate','pddlparser.py',284),
  ('predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN','predicate',5,'p_predicate','pddlparser.py',285),
  ('predicate -> LPAREN NAME RPAREN','predicate',3,'p_predicate','pddlparser.py',286),
  ('ground_predicate -> LPAREN NAME constants_lst RPAREN','ground_predicate',4,'p_ground_predicate','pddlparser.py',296),
  ('ground_predicate -> LPAREN NAME RPAREN','ground_predicate',3,'p_ground_predicate','pddlparser.py',297),
  ('typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst','typed_constants_lst',4,'p_typed_constants_lst','pddlparser.py',305),
  ('typed_constants_lst -> constants_lst HYPHEN type','typed_constants_lst',3,'p_typed_constants_lst','pddlparser.py',306),
  ('typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst','typed_variables_lst',4,'p_typed_variables_lst','pddlparser.py',314),
  ('typed_variables_lst -> variables_lst HYPHEN type','typed_variables_lst',3,'p_typed_variables_lst','pddlparser.py',315),
  ('constants_lst -> constant constants_lst','constants_lst',2,'p_constants_lst','pddlparser.py',323),
  ('constants_lst -> constant','constants_lst',1,'p_constants_lst','pddlparser.py',324),
  ('variables_lst -> VARIABLE variables_lst','variables_lst',2,'p_variables_lst','pddlparser.py',332),
  ('variables_lst -> VARIABLE','variables_lst',1,'p_variables_lst','pddlparser.py',333),
  ('names_lst -> NAME names_lst','names_lst',2,'p_names_lst','pddlparser.py',341),
  ('names_lst -> NAME','names_lst',1,'p_names_lst','pddlparser.py',342),
  ('type -> NAME','type',1,'p_type','pddlparser.py',352),
  ('constant -> NAME','constant',1,'p_constant','pddlparser.py',357),
]
